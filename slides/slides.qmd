---
title: "Slides for Karl Berator"
author: "William Pincombe"
format: pptx
always_allow_html: true
---

```{r, include=FALSE}
# Load packages
pacman::p_load(tidyverse, gt, kableExtra)

# Import data
data <- read_csv(
  here::here("cleaned-data", "manually-cleaned-data-long.csv")
)

# According to collaborator, -99 is code for missing value, so recode as NaN
data <- data |>
  mutate(gene_expression = na_if(gene_expression, -99))

# Set up data for tables
data_wide <- read_csv(
  here::here("cleaned-data", "manually-cleaned-data-wide.csv")
)

# According to collaborator, -99 is code for missing value, so recode as NaN
data_wide <- data_wide |>
  mutate(gene_expression_WT_AF42_2 = na_if(gene_expression_WT_AF42_2, -99))
```


<!-- ## SLIDE TITLE -->

<!-- SIMPLE EXAMPLE TABLE -->

<!-- ```{r} -->
<!-- tab <- data.frame(x = c(0,1,2,3,4,5,6,7,8,9), y = c(1,2,3,4,5,6,7,8,9,10)) |> -->
<!--   gt() -->
<!-- tab -->
<!-- ``` -->

## Gene Expression data for cell line Wild Type (WT)

```{r, echo=FALSE}
data_wide |>
  select(conc,
         gene_expression_WT_placebo,
         gene_expression_WT_placebo_2,
         gene_expression_WT_AF42,
         gene_expression_WT_AF42_2,
         ) |>
  gt() |>
  #tab_header(
  #  title = "Wild Type (WT)"
  #) |>
  tab_spanner(label = "Placebo",
              columns = c(gene_expression_WT_placebo, gene_expression_WT_placebo_2)) |>
  tab_spanner(label = "AF42",
              columns = c(gene_expression_WT_AF42, gene_expression_WT_AF42_2)) |>
  cols_label(
    conc = "Concentration",
    gene_expression_WT_placebo = "Trial 1",
    gene_expression_WT_placebo_2 = "Trial 2",
    gene_expression_WT_AF42 = "Trial 1",
    gene_expression_WT_AF42_2 = "Trial 2"
  )
```

## Gene Expression data for cell line CT101

```{r, echo=FALSE}
data_wide |>
  select(conc,
         gene_expression_CT101_placebo,
         gene_expression_CT101_placebo_2,
         gene_expression_CT101_AF42,
         gene_expression_CT101_AF42_2,
  ) |>
  gt() |>
  #tab_header(
  #  title = "CT101"
  #) |>
  tab_spanner(label = "Placebo",
              columns = c(gene_expression_CT101_placebo, gene_expression_CT101_placebo_2)) |>
  tab_spanner(label = "AF42",
              columns = c(gene_expression_CT101_AF42, gene_expression_CT101_AF42_2)) |>
  cols_label(
    conc = "Concentration",
    gene_expression_CT101_placebo = "Trial 1",
    gene_expression_CT101_placebo_2 = "Trial 2",
    gene_expression_CT101_AF42 = "Trial 1",
    gene_expression_CT101_AF42_2 = "Trial 2"
  )
```






## Scatterplot for Wild Type

```{r, echo=FALSE, warning=FALSE}
data |> 
  filter(gene_type == "WT") |>
  ggplot(aes(x = conc, y = gene_expression, col = treatment)) + 
  geom_point() + 
  geom_smooth(method = 'loess', formula = 'y ~ x', level = 0.95, alpha = 0.3, size = 0.5) + 
  harrypotter::scale_color_hp_d("Ravenclaw") +
  labs(
    x = "Concentration of Growth Factor",
    y = "Gene Expression",
    title = "Wild Type (WT)", #: Gene expression for different concentrations of growth factor, for treatment and placebo",
    col = "Treatment")
```

## Scatterplot for CT101

```{r, echo=FALSE}
data |> 
  filter(gene_type == "CT101") |>
  ggplot(aes(x = conc, y = gene_expression, col = treatment)) + 
  geom_point() + 
  geom_smooth(method = 'loess', formula = 'y ~ x', level = 0.95, alpha = 0.3, size = 0.5) + 
  harrypotter::scale_color_hp_d("Ravenclaw") +
  labs(
    x = "Concentration of Growth Factor",
    y = "Gene Expression",
    title = "Gene Type CT101", #: Gene expression for different concentrations of growth factor, for treatment and placebo",
    col = "Treatment")
```


## Side-By-Side Boxplots

These plots show the range of values of gene expression for each treatment and cell line. For each group, 50% of the data lies in the range given by the box, while the lowest and highest 25% are in the range given by the lines.

```{r, echo=FALSE, warning=FALSE}
data |>
  unite("series", gene_type:treatment) |>
  ggplot(aes(x = series, y = gene_expression)) +
  geom_boxplot() + 
  labs(
    x = "Cell Line and Treatment",
    y = "Gene Expression"
  )
```

