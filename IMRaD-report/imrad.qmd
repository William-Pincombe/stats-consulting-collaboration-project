---
title: "IMRaD Report"
author: "William Pincombe"
format: pdf
bibliography: imrad.bib
---

```{r}
#| echo = FALSE
# Quietly load packages
pacman::p_load(tidyverse, # for data processing
               gt, # for tables
               patchwork, # for combining plots
               showtext, # for the plots
               scales, # for the plots
               lme4, # For fitting mixed-effect models
               lmerTest # for assessing mixed-effect models
               )
```


```{r}
#| echo = FALSE,
#| message = FALSE,
#| warning = FALSE
# Quietly load data
data <- read_csv(
    here::here("cleaned-data", "manually-cleaned-data-long.csv") 
  ) %>% 
  mutate(gene_expression = na_if(gene_expression, -99)) %>% 
  drop_na() %>% 
  mutate(
    gene_type = as.factor(gene_type),
    treatment = as.factor(treatment),
    GL = as.factor(GL)
  )
```


## Introduction

We are analysing data provided by Karl Berator. The data consists of the results of 8 trials where the gene expression was measured for 11 integer levels of concentration of growth factor between 0 and 10. Each trial was conducted with a treatment, either AF42 or placebo, and a cell type, either Wild Type (WT) or CT101. Two trials were carried out on each combination of treatment and cell type. Every trial was carried out on a different gene line. 

There are therefore five variables in the data:

* `Gene Expression` is a continuous variable.

* `Concentration` of growth factor, measured in $\mu$g/ml, is a continuous variable taking integer values between 0 and 11.

* `Treatment` is a factor variable with levels AF42 and placebo.

* `Cell Type` is a factor variable with levels WT and CT101.

* `Gene Line` is a factor variable with 8 levels: CsE, bNo, JZC, fUg, jEK, Hoe, Rza and xpo.

We want to study the effect of treatment on the relationship between the concentration of growth factor and the gene expression.

## Methods

We cleaned the data for analysis by saving it in a .csv file in a long format, with a column representing each of the five variables. Some example observations of the data in this format are shown in @tbl-show-data.

```{r}
#| echo: false
#| label: tbl-show-data
#| tbl-cap: "The first 5 observations of the first trial, to show how the data was structured for the analysis."
head(data) %>% 
  gt() %>% 
  cols_label(
    conc = "Concentration",
    gene_expression = "Gene Expression",
    gene_type = "Cell Type",
    treatment = "Treatment",
    GL = "Gene Line"
  )
```


There was one observation with a missing level of gene expression, at concentration 5 with cell type WT, treatment AF42 and gene line fUg. Since gene expression is our response variable, we excluded this observation from our data, leaving 87 observations for the analysis.

We are interested in the relationship of three predictor variables - concentration, treatment and cell type - with the response variable gene expression. However, we also must control for different gene lines used in each trial of the experiment. Therefore, we will use a mixed-effects model, with concentration, treatment and cell type as our fixed effects and gene line as a random effect.

We fit the mixed-effect model using Restricted Maximum Likelihood (REML) to avoid bias in the random effects [@MorrellChristopherH.1998LRTo].

<!-- tuning of model -->

We used the R statistical programming language [@R_ref] for our analysis, using the tidyverse package [@tidy_ref] to clean the data. We used the `lmer` command from the lme4 package [@lme4_ref] to fit mixed-effects models and the lmerTest package [@lmerTest_ref] to perform hypothesis tests on variable removal.

## Results

Looking at the scatter plot of the data in @fig-scatterplot-data, there appears to be a positive linear relationship between concentration and gene expression. The treatment AF42 appears to have a substantial impact on the slope of the relationship between concentration and gene expression, although this is clearly for Wild Type. Both the treatment and placebo observations appear to be higher for the same concentration in CT101 compared to Wild Type.

```{r, echo = FALSE, warning = FALSE}
#| label: fig-scatterplot-data
#| fig-cap: "Scatter plot of gene expression for different concentrations of growth factor. The different cell types are shown in side-by-side plots, and the treatment is indicated by the colour."
# Recreating Jono's colour palette
col_pal <- c("#78a8d1","#d5bf98")

# Add Times New Roman font
font_add(
  family = "times",
  regular = here::here(
    "Times_New_Roman.ttf"
  )
)

# Recreate plot
showtext_auto() # Set showtext running

WTP <- data %>% 
  filter(gene_type == "WT") %>% 
  ggplot(aes(x = conc, y = gene_expression, col = treatment)) + 
  geom_point() + 
  scale_colour_manual(values = col_pal,
                      breaks = c("AF42", "placebo"),
                      labels = c("Activating factor 42", "Placebo")) + 
  theme_bw() +  
  geom_smooth(method = 'loess', formula = 'y ~ x', level = 0.95, alpha = 0.3, linewidth = 0.5) + 
  labs(
    x = "Concentration of Growth Factor (μg/ml)",
    y = "Gene Expression",
    title = "Wild Type (WT)", #: Gene expression for different concentrations of growth factor, for treatment and placebo",
    col = "Treatment") +
  theme(
    text = element_text(family = "times", size = 10)
  ) + 
  scale_x_continuous(breaks = seq(0,10)) + 
  scale_y_continuous(breaks = seq(10,40,10))

CTP <- data %>% 
  filter(gene_type == "CT101") %>% 
  ggplot(aes(x = conc, y = gene_expression, col = treatment)) + 
  geom_point() +
  scale_colour_manual(values = col_pal,
                      breaks = c("AF42", "placebo"),
                      labels = c("Activating factor 42", "Placebo")) +   
  theme_bw() + 
  geom_smooth(method = 'loess', formula = 'y ~ x', level = 0.95, alpha = 0.3, linewidth = 0.5) + 
  labs(
    x = "Concentration of Growth Factor (μg/ml)",
    y = "Gene Expression",
    title = "CT101", #: Gene expression for different concentrations of growth factor, for treatment and placebo",
    col = "Treatment") +
  theme(
    text = element_text(family = "times", size = 10)
  ) + 
  scale_x_continuous(breaks = seq(0,10)) + 
  scale_y_continuous(breaks = seq(10,50,10))



data_scatter <- WTP + CTP & theme(legend.position = "bottom")
data_scatter <- data_scatter + plot_layout(guides = "collect")
data_scatter
```

As a result of the relationships observed in @fig-scatterplot-data, we fit a model including concentration, treatment and cell type as predictors for gene expression, with interaction terms between concentration and the two categorical variables to allow the slope to vary. However, we know that each series of observations was done on a different cell type. This could have an effect on the gene expression, so we should include it in the model. However, we are not interested in this effect, we only want to remove bias from our estimates of the other coefficients, so we include it as a random effect in a Mixed-Effects Model. The fitted coefficients for the fixed effects in this model are given by @tbl-M2.


```{r fitting_models}
#| echo: false 
# Fit a simple linear model without the random effects for comparison
M1 <- lm(gene_expression ~ conc + treatment + treatment:conc + gene_type + gene_type:conc,
         data = data)

# Fit the Mixed-Effects Model (Intercept-only random effects, REML)
M2 <- lmer(gene_expression ~ conc + treatment + treatment:conc + gene_type + gene_type:conc +
               (1 | GL),
           data = data,
           REML = TRUE)
```


```{r}
#| echo: false
#| label: tbl-M2
#| tbl-cap: "Summary of estimated coefficients in Mixed-Effects Model"
tab1 <- summary(M2)$coefficients %>% 
  as.data.frame() %>% 
  round(4)
rownames(tab1) <- c("Intercept",
                    "Concentration",
                    "Treatment (placebo)",
                    "cell type (WT)",
                    "Concentration * Treatment (placebo)",
                    "Concentration * cell type (WT)")
gt(tab1, rownames_to_stub = TRUE) %>% 
  cols_label(
    `Estimate` = "Estimate",
    `Std. Error` = "Std. Error",
    `df` = "df"
  )
```

The results in @tbl-M2 suggest that the there is a strong positive relationship between concentration and gene expression. However, the effect of treatment and cell type is more ambiguous, with the slope terms returning very low standard error and high test statistics while the intercept terms have p-values greater than the standard rule of thumb of $0.05$. To test the overall effect of each factor variable, we fit models excluding these variables, and then compare to the complete model. 


```{r models_for_comparison}
#| echo: false
# Fit Mixed-Effects Model without gene_type for comparison
M3 <- lmer(gene_expression ~ conc + treatment + treatment:conc + 
               (1 | GL),
           data = data,
           REML = TRUE)

# Fit Mixed-Effects Model without treatment for comparison
M4 <- lmer(gene_expression ~ conc + gene_type + gene_type:conc +
               (1 | GL),
           data = data,
           REML = TRUE)
```

```{r}
#| echo: false
#| label: tbl-RE-var-comp
#| tbl-cap: "Model metrics for the complete mixed-effects model, and with each of the fixed effect factor variables treatment and cell type removed."
data.frame(
  Model = c("Complete","Without cell type","Without Treatment", "Without random-effects (lm)"),
  AIC = AIC(M2,M3,M4,M1)$AIC,
  BIC = BIC(M2,M3,M4,M1)$BIC
) %>% 
  gt()
```

The AIC and BIC of the different models is shown in @tbl-RE-var-comp. We also include a model without the random effects, a simple linear model fitted using the `lm` function. The complete mixed-effects model, with both treatment and cell type, has the lowest, hence most optimal, AIC and BIC. The removal of treatment has a much larger negative effect on both metrics than the removal of cell type. 

We are also interested in whether the random effects are necessary. Firstly, we extract the values of the intercept under each level of gene line from the complete model. We then subtract the overall model intercept from each of these to show the difference in intercept for each random effect. This is shown in @tbl-random-effect-values.

```{r}
#| echo: false
#| label: tbl-random-effect-values
#| tbl-cap: "Intercept under each level of gene line, the random effect, in the complete model. The difference to the overall intercept is also given."
coef(M2)$GL %>% 
  select("Intercept" = `(Intercept)`) %>% 
  mutate(
    Difference = Intercept - 9.8967224
  ) %>% 
  gt(rownames_to_stub = TRUE)
```

We can test the significance of the random effect using the `ranova` command from the `lmerTest` package, which performs a likelihood ratio test. This fits a model without the random effect, and compares the log-likelihood. The results of this test are shown in @tbl-M2ranova, where we find that the reduced model has higher AIC and lower log likelihood. The likelihood ratio test rejects the null hypothesis that there is no difference between the log likelihoods of the models, so we take the better complete model.

```{r}
#| echo: false
#| label: tbl-M2ranova
#| tbl-cap: "Results of a likelihood ratio test on removing the intercept random effect for gene line (GL) from the mixed-effects model."
# THIS LOOKS HORRIBLE! FIX THIS UP
ranova(M2) %>% 
  as.data.frame() %>% 
  mutate(
    namevar = c("Complete Model","Random Effect Removed")
  ) %>% 
  gt(rowname_col = "namevar") %>% 
  cols_label(
    `npar` = "No. Parameters",
    `logLik` = "Log Likelihood"
  )
```

We will therefore use the complete mixed-effects model as our final model. To check that this model satisfies the regression assumptions, we plot a histogram of the residuals in @fig-residuals-plot. We expect to see residuals approximately normally distributed. We observe that the residuals are close to the normal distribution, although they are somewhat right-skewed due to a few large positive values.

```{r}
#| echo: false
#| label: fig-residuals-plot
#| fig-cap: "Histogram of the residuals of the fitted mixed-effects model."
data.frame(
  resid = residuals(M2)
) %>% 
  ggplot(aes(x = resid)) + 
  geom_histogram(col = 'black', fill = 'orange', binwidth = 0.25) + 
  labs(x = "Residuals", y = "Count") + 
  theme_bw()
```

Secondly, we plot the residuals against the fitted values in @fig-resid-var-plot. We expect the residuals to be roughly evenly distributed around the x-axis. There does not seem to be any substantial change in residual variance across the fitted values. However, we can again see that the residuals are somewhat right-skewed.

```{r}
#| echo: false
#| label: fig-resid-var-plot
#| fig-cap: "Plot of residuals against fitted values. The residuals satisfy the assumption of homoskedasticity, with roughly constant variance. However, the residuals are somewhat right-skewed."
data.frame(
  resid = residuals(M2),
  fit = fitted(M2)
) %>% 
  ggplot(aes(x = fit, y = resid)) + 
  geom_point() + 
  theme_bw() + 
  labs(
    x = "Fitted values",
    y = "Residuals"
  ) + 
  geom_hline(yintercept = 0, linetype = 2)
```



<!-- ```{r} -->
<!-- plot(M2) -->
<!-- ``` -->





To check how well the final model fits the data, we can plot the fitted relationships above the scatter plot of the data from @fig-scatterplot-data, as shown in @fig-fitted-values-scatterplot.

```{r}
#| echo: false
#| warning: false
#| label: fig-fitted-values-scatterplot
#| fig-cap: "Scatter plot of gene expression over concentration of growth factor. The points show the observations while the lines show the fitted values from the complete mixed-effects model. The cell types are shown in separate plots. We can see here that the random-effect term has adjusted the fitted lines to more accurately account for the differences between trials on different gene lines." 
## ASSUMING FINAL MODEL is: M2
data <- data %>% 
  mutate(
    fitted = fitted(M2)
  )

WT_fitted_plot <- data %>%  
  filter(gene_type == "WT") %>% 
  ggplot(aes(x = conc, y = gene_expression, col = treatment, shape = GL)) + 
  geom_point() + 
  scale_colour_manual(values = col_pal,
                      breaks = c("AF42", "placebo"),
                      labels = c("Activating factor 42", "Placebo")) + 
  scale_shape_manual(values = c(0,1,2,3,4,5,6,7),
                     breaks = c("bNo","CsE","fUg","JZC","Hoe","jEK","Rza","xpo"),
                     labels = c("bNo","CsE","fUg","JZC","Hoe","jEK","Rza","xpo"),
                     drop = FALSE) + 
  theme_bw() +  
  geom_line(aes(x = conc, y = fitted, col = treatment, shape = GL)) + 
  labs(
    x = "Concentration of Growth Factor (μg/ml)",
    y = "Gene Expression",
    title = "Wild Type (WT)",
    col = "Treatment",
    shape = "Gene Line"
  ) +
  theme(
    text = element_text(family = "times", size = 10)
  ) + 
  scale_x_continuous(breaks = seq(0,10)) + 
  scale_y_continuous(breaks = seq(10,40,10))

CT_fitted_plot <- data %>%  
  filter(gene_type == "CT101") %>% 
  ggplot(aes(x = conc, y = gene_expression, col = treatment, shape = GL)) + 
  geom_point() +
  scale_colour_manual(values = col_pal,
                      breaks = c("AF42", "placebo"),
                      labels = c("Activating factor 42", "Placebo")) +   
  scale_shape_manual(values = c(0,1,2,3,4,5,6,7),
                     breaks = c("bNo","CsE","fUg","JZC","Hoe","jEK","Rza","xpo"),
                     labels = c("bNo","CsE","fUg","JZC","Hoe","jEK","Rza","xpo"),
                     drop = FALSE) + 
  theme_bw() +  
  geom_line(aes(x = conc, y = fitted, col = treatment, shape = GL)) + 
  labs(
    x = "Concentration of Growth Factor (μg/ml)",
    y = "Gene Expression",
    title = "CT101",
    col = "Treatment",
    shape = "Gene Line"
  ) +
  theme(
    text = element_text(family = "times", size = 10)
  ) + 
  scale_x_continuous(breaks = seq(0,10)) + 
  scale_y_continuous(breaks = seq(10,50,10))

data_fitted <- WT_fitted_plot + CT_fitted_plot & theme(legend.position = "bottom")
data_fitted <- data_fitted + plot_layout(guides = "collect")
data_fitted
```









## Discussion

Our model shows that there is a significant positive correlation between concentration and gene expression and that the AF42 treatment increases the slope of this relationship.

In our final model, the slope coefficient for concentration is estimated to be 1.8892 greater for the treatment than for the placebo. This indicates that we expect, for instance for the cell type CT101 that an increase in 1 $\mu$g/ml of concentration will lead to an increase of around 1.40 in gene expression without the treatment, and an increase of 3.29 if the treatment is applied. The fact that the AIC and BIC metrics were substantially worse without treatment, as seen in @tbl-random-effect-values, indicates the significance of this effect.

We also found that the effect of concentration was different across the two cell types, with increases in concentration having a greater effect for CT101 than for Wild Type. 

We can conclude that treatment has a significant positive effect on the effect of concentration on gene expression. 

\pagebreak

## References

::: {#refs}
:::

